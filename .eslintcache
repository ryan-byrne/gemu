[{"/Users/rbyrne/projects/gemu/src/index.js":"1","/Users/rbyrne/projects/gemu/src/reportWebVitals.js":"2","/Users/rbyrne/projects/gemu/src/app/lobby/util/Naming.js":"3","/Users/rbyrne/projects/gemu/src/app/lobby/Lobby.js":"4","/Users/rbyrne/projects/gemu/src/app/App.js":"5","/Users/rbyrne/projects/gemu/src/app/room/Room.js":"6","/Users/rbyrne/projects/gemu/src/app/lobby/JoinGame.js":"7","/Users/rbyrne/projects/gemu/src/app/room/components/AudioVisualizer.js":"8","/Users/rbyrne/projects/gemu/src/app/room/components/Player.js":"9","/Users/rbyrne/projects/gemu/src/app/room/components/Controller.js":"10","/Users/rbyrne/projects/gemu/src/app/room/components/Environment.js":"11","/Users/rbyrne/projects/gemu/src/app/Test.js":"12"},{"size":505,"mtime":1613414129876,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1611345917734,"results":"15","hashOfConfig":"14"},{"size":50235,"mtime":1611674542309,"results":"16","hashOfConfig":"14"},{"size":3192,"mtime":1612460031244,"results":"17","hashOfConfig":"14"},{"size":4479,"mtime":1613418152847,"results":"18","hashOfConfig":"14"},{"size":4225,"mtime":1613412859001,"results":"19","hashOfConfig":"14"},{"size":1401,"mtime":1612109922671,"results":"20","hashOfConfig":"14"},{"size":1547,"mtime":1612639694275,"results":"21","hashOfConfig":"14"},{"size":730,"mtime":1612639982489,"results":"22","hashOfConfig":"14"},{"size":4061,"mtime":1612991239138,"results":"23","hashOfConfig":"14"},{"size":1341,"mtime":1613418254277,"results":"24","hashOfConfig":"14"},{"size":1137,"mtime":1613414116133,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"73ouky",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rbyrne/projects/gemu/src/index.js",[],"/Users/rbyrne/projects/gemu/src/reportWebVitals.js",[],["56","57"],"/Users/rbyrne/projects/gemu/src/app/lobby/util/Naming.js",[],"/Users/rbyrne/projects/gemu/src/app/lobby/Lobby.js",["58","59","60"],"import React, { useState, useCallback } from 'react';\nimport Naming from './util/Naming';\nimport './style/lobby.css';\n\nimport shuffle from './style/shuffle.png';\n\nexport default function Lobby({\n    username, roomId, handleUserName, handleRoomId, handleStartGame, handleJoinGame\n  }){\n\n  const [selected, setSelected] = useState(null);\n\n  const handleSelectionChange = (id) => {(id === selected) ? setSelected(null) : setSelected(id);};\n\n  const getRandomRoom = useCallback( event => {\n    var result = '';\n    const chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    for (var i = 6; i > 0; --i) result += chars[Math.floor(Math.random() * chars.length)];\n    handleRoomId(event, result);\n  }, [handleRoomId]);\n\n  const getRandomName = useCallback( event => {\n    var adj = Naming.adjectives[Math.floor(Math.random() * Naming.adjectives.length)];\n    var noun = Naming.nouns[Math.floor(Math.random() * Naming.adjectives.length)];\n    adj = adj.charAt(0).toUpperCase() + adj.slice(1);\n    noun = noun.charAt(0).toUpperCase() + noun.slice(1);\n    handleUserName(event, adj+noun);\n  }, [handleUserName]);\n\n  const mainMenu = (\n    <div className='mainMenu'>\n      <div className={(selected === 0) ? 'selectedMenuItem' : 'menuItem'}\n        onClick={() => handleSelectionChange(0)}>Join a Gemu</div>\n      <div className={(selected === 1) ? 'selectedMenuItem' : 'menuItem'}\n        onClick={() => handleSelectionChange(1)}>Start a Gemu</div>\n    </div>\n  );\n\n  var subMenu;\n  if (selected === 0) {\n    subMenu = (\n      <div className='subMenu'>\n        <div className='subMenuRow'>\n          <input className='menuInput' value={username} type='text'\n          id='user' onChange={handleUserName} onBlur={handleUserName}\n          placeholder='Your Name'/>\n          <img className='randomButton' onClick={getRandomName} src={shuffle} height='20px'/>\n        </div>\n        <div className='subMenuRow'>\n          <input className='menuInput' value={roomId} maxLength={6}\n          type='text' id='roomId' onChange={handleRoomId} onBlur={handleRoomId}\n          placeholder='Room ID'/>\n        </div>\n        <button className='menuButton' onClick={handleJoinGame}>Join</button>\n      </div>\n    )\n  }\n  else if (selected === 1) {\n    subMenu = (\n      <div className='subMenu'>\n        <div className='subMenuRow'>\n          <input className='menuInput' value={username} type='text'\n          id='user' onChange={handleUserName} onBlur={handleUserName}\n          placeholder='Your Name'/>\n        <img className='randomButton' onClick={getRandomName} src={shuffle} height='20px'/>\n        </div>\n        <div className='subMenuRow'>\n          <input id='roomId' className='menuInput' value={roomId} type='text' maxLength={6}\n          placeholder='Room ID' onChange={handleRoomId} onBlur={handleRoomId}/>\n          <img className='randomButton' onClick={getRandomRoom} src={shuffle} height='20px'/>\n        </div>\n        <button className='menuButton' onClick={handleStartGame}>Start</button>\n      </div>\n    )\n  }\n  else {\n    subMenu = (<div></div>)\n  }\n\n  return (\n    <div className='menuContainer'>\n      <div className='menuIcon'></div>\n      {mainMenu}\n      {subMenu}\n    </div>\n  )\n};\n","/Users/rbyrne/projects/gemu/src/app/App.js",["61","62"],"/Users/rbyrne/projects/gemu/src/app/room/Room.js",["63","64","65"],"/Users/rbyrne/projects/gemu/src/app/lobby/JoinGame.js",["66","67"],"import { useEffect, useCallback } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport Naming from './util/Naming';\nimport shuffle from './style/shuffle.png'\n\nconst JoinGame = ({setRoomId, username, handleUserName, handleJoinGame, handleLogout}) => {\n\n  const roomId = useLocation().pathname.substring(6);\n\n  const getRandomName = useCallback( event => {\n    var adj = Naming.adjectives[Math.floor(Math.random() * Naming.adjectives.length)];\n    var noun = Naming.nouns[Math.floor(Math.random() * Naming.adjectives.length)];\n    adj = adj.charAt(0).toUpperCase() + adj.slice(1);\n    noun = noun.charAt(0).toUpperCase() + noun.slice(1);\n    handleUserName(event, adj+noun);\n  }, [handleUserName]);\n\n  useEffect(() => {\n    setRoomId(roomId);\n  }, [setRoomId]);\n\n  return (\n    <div className='menuContainer'>\n      <h2>Joining {roomId}</h2>\n      <div className='subMenu'>\n      <input className='menuInput' value={username} type='text'\n      id='user' onChange={handleUserName} onBlur={handleUserName}\n      placeholder='Your Name'/>\n      <img className='randomButton' onClick={getRandomName} src={shuffle}/>\n      <div style={{margin:'10px'}}>\n        <Link className='menuButton' to='/' style={{marginRight:'10px'}}>Leave</Link>\n        <button className='menuButton' onClick={handleJoinGame}>Join</button>\n      </div>\n      </div>\n    </div>\n  )\n}\n\nexport default JoinGame;\n","/Users/rbyrne/projects/gemu/src/app/room/components/AudioVisualizer.js",["68"],"import React, {useEffect, useRef} from 'react';\n\nexport default function AudioVisualizer({audioStream}){\n\n  // Animation Variable (in case it stops)\n  var animate;\n\n  // Create storage & target for audio data\n  const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n  const analyser = audioContext.createAnalyser();\n  analyser.fftSize = 4096;\n  var bufferLength = analyser.frequencyBinCount;\n  var audioData = new Uint8Array(bufferLength);\n  if (audioStream) {\n    const source = audioContext.createMediaStreamSource(audioStream);\n    source.connect(analyser);\n  }\n\n  const draw = () => {\n\n    animate = requestAnimationFrame(draw);\n    analyser.getByteFrequencyData(audioData);\n    const canvas = canvasRef.current;\n    if (!canvas) { return }\n    const context = canvas.getContext('2d');\n    const { height, width } = canvas;\n    context.clearRect(0,0,width, height);\n    context.fillStyle = '#2F3E46';\n    //context.strokeStyle = 'rgb(255, 255, 255)';\n    //context.beginPath();\n    //context.moveTo(0,height/2)\n    var barWidth = width/bufferLength;\n    var barHeight;\n    for ( var i in audioData) {\n      barHeight = audioData[i];\n      context.fillRect(i, 0, barWidth, barHeight/2)\n    }\n\n  }\n\n  const cleanup = () => {\n    cancelAnimationFrame(animate);\n    audioContext.close();\n  }\n\n  useEffect(() => {\n    if (audioStream) { draw() }\n    return () => cleanup()\n  }, [])\n\n  // Create the Canvas\n  const canvasRef = useRef(null);\n\n  return (\n    <canvas className='audioVisualizer' ref={canvasRef}></canvas>\n  )\n}\n","/Users/rbyrne/projects/gemu/src/app/room/components/Player.js",["69"],"import { useRef, useEffect} from 'react';\n\nimport './style/player.css';\n\nimport AudioVisualizer from './AudioVisualizer';\n\nexport default function Player({audioStream, videoStream, size, username}) {\n\n  const videoRef = useRef(null);\n  const audioRef = useRef(null);\n\n  useEffect(() => {\n    const video = videoRef.current;\n    if ( video ) { video.srcObject = videoStream;video.play() }\n  }, [videoStream]);\n\n  return (\n    <div className='playerContainer' style={size}>\n      { videoStream ?\n          <video className='webcamContainer' ref={videoRef}> </video> :\n            <div className='nofaceContainer'></div>\n       }\n      {audioStream ? <AudioVisualizer audioStream={audioStream} size={size}/> : null}\n    </div>\n  )\n}\n",["70","71"],"/Users/rbyrne/projects/gemu/src/app/room/components/Controller.js",["72","73","74","75","76"],"/Users/rbyrne/projects/gemu/src/app/room/components/Environment.js",["77","78","79"],"/Users/rbyrne/projects/gemu/src/app/Test.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":47,"column":11,"nodeType":"86","endLine":47,"endColumn":94},{"ruleId":"84","severity":1,"message":"85","line":65,"column":9,"nodeType":"86","endLine":65,"endColumn":92},{"ruleId":"84","severity":1,"message":"85","line":70,"column":11,"nodeType":"86","endLine":70,"endColumn":94},{"ruleId":"87","severity":1,"message":"88","line":40,"column":32,"nodeType":"89","messageId":"90","endLine":40,"endColumn":36},{"ruleId":"91","severity":1,"message":"92","line":112,"column":6,"nodeType":"93","endLine":112,"endColumn":8,"suggestions":"94"},{"ruleId":"87","severity":1,"message":"95","line":1,"column":30,"nodeType":"89","messageId":"90","endLine":1,"endColumn":41},{"ruleId":"87","severity":1,"message":"96","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":18},{"ruleId":"91","severity":1,"message":"97","line":117,"column":5,"nodeType":"93","endLine":117,"endColumn":7,"suggestions":"98"},{"ruleId":"91","severity":1,"message":"99","line":20,"column":6,"nodeType":"93","endLine":20,"endColumn":17,"suggestions":"100"},{"ruleId":"84","severity":1,"message":"85","line":29,"column":7,"nodeType":"86","endLine":29,"endColumn":76},{"ruleId":"91","severity":1,"message":"101","line":49,"column":6,"nodeType":"93","endLine":49,"endColumn":8,"suggestions":"102"},{"ruleId":"87","severity":1,"message":"103","line":10,"column":9,"nodeType":"89","messageId":"90","endLine":10,"endColumn":17},{"ruleId":"80","replacedBy":"104"},{"ruleId":"82","replacedBy":"105"},{"ruleId":"87","severity":1,"message":"95","line":1,"column":19,"nodeType":"89","messageId":"90","endLine":1,"endColumn":30},{"ruleId":"91","severity":1,"message":"106","line":83,"column":9,"nodeType":"93","endLine":83,"endColumn":11,"suggestions":"107"},{"ruleId":"84","severity":1,"message":"85","line":104,"column":9,"nodeType":"86","endLine":105,"endColumn":69},{"ruleId":"84","severity":1,"message":"85","line":109,"column":9,"nodeType":"86","endLine":110,"endColumn":66},{"ruleId":"84","severity":1,"message":"85","line":113,"column":9,"nodeType":"86","endLine":114,"endColumn":45},{"ruleId":"87","severity":1,"message":"95","line":1,"column":31,"nodeType":"89","messageId":"90","endLine":1,"endColumn":42},{"ruleId":"87","severity":1,"message":"108","line":12,"column":10,"nodeType":"89","messageId":"90","endLine":12,"endColumn":18},{"ruleId":"91","severity":1,"message":"109","line":28,"column":6,"nodeType":"93","endLine":28,"endColumn":8,"suggestions":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'type' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleError' and 'handleSuccess'. Either include them or remove the dependency array.","ArrayExpression",["113"],"'useCallback' is defined but never used.","'Controller' is defined but never used.","React Hook useEffect has missing dependencies: 'audio.stream' and 'video.stream'. Either include them or remove the dependency array.",["114"],"React Hook useEffect has a missing dependency: 'roomId'. Either include it or remove the dependency array.",["115"],"React Hook useEffect has missing dependencies: 'audioStream', 'cleanup', and 'draw'. Either include them or remove the dependency array.",["116"],"'audioRef' is assigned a value but never used.",["111"],["112"],"React Hook useEffect has missing dependencies: 'handleKey', 'handleMouseDown', and 'handleMouseUp'. Either include them or remove the dependency array.",["117"],"'position' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'client.socket', 'handleJoin', 'handleLeft', 'handleMessage', and 'roomId'. Either include them or remove the dependency array. If 'handleMessage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["118"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [handleError, handleSuccess]",{"range":"131","text":"132"},"Update the dependencies array to be: [audio.stream, video.stream]",{"range":"133","text":"134"},"Update the dependencies array to be: [roomId, setRoomId]",{"range":"135","text":"136"},"Update the dependencies array to be: [audioStream, cleanup, draw]",{"range":"137","text":"138"},"Update the dependencies array to be: [handleKey, handleMouseDown, handleMouseUp]",{"range":"139","text":"140"},"Update the dependencies array to be: [client.socket, handleJoin, handleLeft, handleMessage, roomId]",{"range":"141","text":"142"},[3272,3274],"[handleError, handleSuccess]",[3582,3584],"[audio.stream, video.stream]",[768,779],"[roomId, setRoomId]",[1401,1403],"[audioStream, cleanup, draw]",[2817,2819],"[handleKey, handleMouseDown, handleMouseUp]",[840,842],"[client.socket, handleJoin, handleLeft, handleMessage, roomId]"]