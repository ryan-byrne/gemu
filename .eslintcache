[{"/Users/rbyrne/projects/gemu/src/index.js":"1","/Users/rbyrne/projects/gemu/src/reportWebVitals.js":"2","/Users/rbyrne/projects/gemu/src/app/lobby/util/Naming.js":"3","/Users/rbyrne/projects/gemu/src/app/lobby/Lobby.js":"4","/Users/rbyrne/projects/gemu/src/app/App.js":"5","/Users/rbyrne/projects/gemu/src/app/room/Room.js":"6","/Users/rbyrne/projects/gemu/src/app/lobby/JoinGame.js":"7","/Users/rbyrne/projects/gemu/src/app/room/components/AudioVisualizer.js":"8","/Users/rbyrne/projects/gemu/src/app/room/components/Player.js":"9","/Users/rbyrne/projects/gemu/src/app/room/components/Controller.js":"10","/Users/rbyrne/projects/gemu/src/app/room/components/Environment.js":"11","/Users/rbyrne/projects/gemu/src/app/Test.js":"12"},{"size":537,"mtime":1612498066212,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1611345917734,"results":"15","hashOfConfig":"14"},{"size":50235,"mtime":1611674542309,"results":"16","hashOfConfig":"14"},{"size":3192,"mtime":1612460031244,"results":"17","hashOfConfig":"14"},{"size":4419,"mtime":1612497680423,"results":"18","hashOfConfig":"14"},{"size":3519,"mtime":1612565545943,"results":"19","hashOfConfig":"14"},{"size":1401,"mtime":1612109922671,"results":"20","hashOfConfig":"14"},{"size":1710,"mtime":1612471476031,"results":"21","hashOfConfig":"14"},{"size":1244,"mtime":1612566364796,"results":"22","hashOfConfig":"14"},{"size":3887,"mtime":1612565919792,"results":"23","hashOfConfig":"14"},{"size":810,"mtime":1612555906193,"results":"24","hashOfConfig":"14"},{"size":1092,"mtime":1612566008943,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"73ouky",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/rbyrne/projects/gemu/src/index.js",["54"],"/Users/rbyrne/projects/gemu/src/reportWebVitals.js",[],["55","56"],"/Users/rbyrne/projects/gemu/src/app/lobby/util/Naming.js",[],"/Users/rbyrne/projects/gemu/src/app/lobby/Lobby.js",["57","58","59"],"import React, { useState, useCallback } from 'react';\nimport Naming from './util/Naming';\nimport './style/lobby.css';\n\nimport shuffle from './style/shuffle.png';\n\nexport default function Lobby({\n    username, roomId, handleUserName, handleRoomId, handleStartGame, handleJoinGame\n  }){\n\n  const [selected, setSelected] = useState(null);\n\n  const handleSelectionChange = (id) => {(id === selected) ? setSelected(null) : setSelected(id);};\n\n  const getRandomRoom = useCallback( event => {\n    var result = '';\n    const chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    for (var i = 6; i > 0; --i) result += chars[Math.floor(Math.random() * chars.length)];\n    handleRoomId(event, result);\n  }, [handleRoomId]);\n\n  const getRandomName = useCallback( event => {\n    var adj = Naming.adjectives[Math.floor(Math.random() * Naming.adjectives.length)];\n    var noun = Naming.nouns[Math.floor(Math.random() * Naming.adjectives.length)];\n    adj = adj.charAt(0).toUpperCase() + adj.slice(1);\n    noun = noun.charAt(0).toUpperCase() + noun.slice(1);\n    handleUserName(event, adj+noun);\n  }, [handleUserName]);\n\n  const mainMenu = (\n    <div className='mainMenu'>\n      <div className={(selected === 0) ? 'selectedMenuItem' : 'menuItem'}\n        onClick={() => handleSelectionChange(0)}>Join a Gemu</div>\n      <div className={(selected === 1) ? 'selectedMenuItem' : 'menuItem'}\n        onClick={() => handleSelectionChange(1)}>Start a Gemu</div>\n    </div>\n  );\n\n  var subMenu;\n  if (selected === 0) {\n    subMenu = (\n      <div className='subMenu'>\n        <div className='subMenuRow'>\n          <input className='menuInput' value={username} type='text'\n          id='user' onChange={handleUserName} onBlur={handleUserName}\n          placeholder='Your Name'/>\n          <img className='randomButton' onClick={getRandomName} src={shuffle} height='20px'/>\n        </div>\n        <div className='subMenuRow'>\n          <input className='menuInput' value={roomId} maxLength={6}\n          type='text' id='roomId' onChange={handleRoomId} onBlur={handleRoomId}\n          placeholder='Room ID'/>\n        </div>\n        <button className='menuButton' onClick={handleJoinGame}>Join</button>\n      </div>\n    )\n  }\n  else if (selected === 1) {\n    subMenu = (\n      <div className='subMenu'>\n        <div className='subMenuRow'>\n          <input className='menuInput' value={username} type='text'\n          id='user' onChange={handleUserName} onBlur={handleUserName}\n          placeholder='Your Name'/>\n        <img className='randomButton' onClick={getRandomName} src={shuffle} height='20px'/>\n        </div>\n        <div className='subMenuRow'>\n          <input id='roomId' className='menuInput' value={roomId} type='text' maxLength={6}\n          placeholder='Room ID' onChange={handleRoomId} onBlur={handleRoomId}/>\n          <img className='randomButton' onClick={getRandomRoom} src={shuffle} height='20px'/>\n        </div>\n        <button className='menuButton' onClick={handleStartGame}>Start</button>\n      </div>\n    )\n  }\n  else {\n    subMenu = (<div></div>)\n  }\n\n  return (\n    <div className='menuContainer'>\n      <div className='menuIcon'></div>\n      {mainMenu}\n      {subMenu}\n    </div>\n  )\n};\n","/Users/rbyrne/projects/gemu/src/app/App.js",["60","61"],"import React, { useState, useCallback, useEffect } from 'react';\nimport { Route, BrowserRouter, Redirect } from 'react-router-dom';\n\nimport './app.css';\n\n// Lobby Components\nimport Lobby from './lobby/Lobby';\nimport JoinGame from './lobby/JoinGame';\n\n// Game Components\nimport Room from './room/Room'\n\n// Create a Socket to communicate with the game server\nconst socket = require('socket.io-client')();\n\nexport default function App (){\n\n  const [username, setUsername] = useState('');\n  const [roomId, setRoomId] = useState('');\n  const [client, setClient] = useState({});\n  const [message, setMessage] = useState({});\n\n  // Change to username\n  const handleUserName = (event, user) => {\n\n    const { parentNode, value } = event.target;\n    const entry = parentNode.children[0];\n\n    const name = event.type === 'click' ? user : value;\n    const cn = name.length > 0 ? 'goodInput' : 'badInput';\n\n    entry.className = cn;\n    entry.focus();\n    entry.style.width = (Math.max(100,name.length*13)).toString()+'px';\n    setUsername(name);\n  };\n\n  // Change to room id\n  const handleRoomId = (event, room) => {\n\n    const { parentNode, value, type } = event.target;\n    const entry = parentNode.children[0];\n\n    const id = event.type === 'click' ? room : value;\n    const cn = id.length === 6 ? 'goodInput' : 'badInput';\n\n    entry.className = cn;\n    entry.focus();\n    entry.style.width = (Math.max(120,id.length*15)).toString()+'px';\n    setRoomId(id.toUpperCase());\n\n  };\n\n  const handleMessage = useCallback((message, color) => {\n    setMessage({text:message,color:color});\n    setTimeout(()=> {\n      setMessage({});\n    },2000);\n  }, [setMessage]);\n\n  const validateEntries = useCallback((event) => {\n    var valid = true;\n    if (!socket.connected) {\n      handleMessage('Unable to connect to socket', 'red');\n      valid=false;\n    }\n    if (roomId.length<6) {\n      handleMessage('RoomID must be 6 characters long', 'red');\n      valid=false;\n    }\n    if (!username) {\n      handleMessage('You must provide a username', 'red');\n      valid=false\n    }\n    return valid;\n  }, [handleMessage, roomId, username])\n\n  // User starts room\n  const handleStartGame = useCallback((event) => {\n    if (validateEntries()) { socket.emit('startSession', {username:username, roomId:roomId}) }\n  }, [username, roomId, validateEntries]);\n\n  // User joins room\n  const handleJoinGame = useCallback((event) => {\n    if (validateEntries()) { socket.emit('joinSession', {username:username, roomId:roomId}) }\n  },[username, roomId, validateEntries]);\n\n  // User leaves room\n  const handleLogout = (event) => {\n    socket.emit('leaveSession', {username:username, roomId:roomId});\n    setMessage({});\n    setClient({socket:null,peers:[]});\n  };\n\n  const handleError = (message) => {\n    handleMessage(message, 'red');\n    setClient({socket:null, peers:[]})\n  }\n\n  const handleSuccess = (data) => {\n    handleMessage(data.message, 'green');\n    setClient({socket:socket, peers:data.peers})\n  }\n\n  useEffect( () => {\n\n    // Set error message and clear socket on failure\n    socket.on('error', (message) => handleError(message));\n    // Set client socket on success\n    socket.on('success', (data) => handleSuccess(data));\n\n  }, [])\n\n  return (\n    <div className='appContainer'>\n      <div className='messageTicker' style={{color:message.color}}>{message.text}</div>\n      <BrowserRouter>\n        <Route exact path='/'>\n          { client.socket ?\n            <Room client={client} username={username} roomId={roomId}\n              handleLogout={handleLogout} handleMessage={handleMessage}/>\n            :\n            <Lobby username={username} roomId={roomId} handleJoinGame={handleJoinGame}\n              handleStartGame={handleStartGame} handleUserName={handleUserName}\n              handleRoomId={handleRoomId}/>\n          }\n        </Route>\n        <Route path='/join/*'>\n          <div>\n            { client.socket ? <Redirect to='/'/> : null }\n            <JoinGame username={username} setRoomId={setRoomId}\n                handleUserName={handleUserName} handleJoinGame={handleJoinGame}\n                handleLogout={handleLogout}/>\n          </div>\n        </Route>\n      </BrowserRouter>\n      <div className='footer'>\n        <p>Made by\n          <a href='https://ryan-byrne.github.io'> Ryan Byrne </a>\n          | Hosted on <a href=\"https://github.com/ryan-byrne/gemu\">Github</a>\n        </p>\n      </div>\n    </div>\n  )\n}\n","/Users/rbyrne/projects/gemu/src/app/room/Room.js",["62","63","64","65","66"],"/Users/rbyrne/projects/gemu/src/app/lobby/JoinGame.js",["67","68"],"import { useEffect, useCallback } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport Naming from './util/Naming';\nimport shuffle from './style/shuffle.png'\n\nconst JoinGame = ({setRoomId, username, handleUserName, handleJoinGame, handleLogout}) => {\n\n  const roomId = useLocation().pathname.substring(6);\n\n  const getRandomName = useCallback( event => {\n    var adj = Naming.adjectives[Math.floor(Math.random() * Naming.adjectives.length)];\n    var noun = Naming.nouns[Math.floor(Math.random() * Naming.adjectives.length)];\n    adj = adj.charAt(0).toUpperCase() + adj.slice(1);\n    noun = noun.charAt(0).toUpperCase() + noun.slice(1);\n    handleUserName(event, adj+noun);\n  }, [handleUserName]);\n\n  useEffect(() => {\n    setRoomId(roomId);\n  }, [setRoomId]);\n\n  return (\n    <div className='menuContainer'>\n      <h2>Joining {roomId}</h2>\n      <div className='subMenu'>\n      <input className='menuInput' value={username} type='text'\n      id='user' onChange={handleUserName} onBlur={handleUserName}\n      placeholder='Your Name'/>\n      <img className='randomButton' onClick={getRandomName} src={shuffle}/>\n      <div style={{margin:'10px'}}>\n        <Link className='menuButton' to='/' style={{marginRight:'10px'}}>Leave</Link>\n        <button className='menuButton' onClick={handleJoinGame}>Join</button>\n      </div>\n      </div>\n    </div>\n  )\n}\n\nexport default JoinGame;\n","/Users/rbyrne/projects/gemu/src/app/room/components/AudioVisualizer.js",["69"],"/Users/rbyrne/projects/gemu/src/app/room/components/Player.js",["70","71","72"],"/Users/rbyrne/projects/gemu/src/app/room/components/Controller.js",["73","74","75","76","77"],"/Users/rbyrne/projects/gemu/src/app/room/components/Environment.js",["78","79"],"/Users/rbyrne/projects/gemu/src/app/Test.js",["80","81"],{"ruleId":"82","severity":1,"message":"83","line":5,"column":8,"nodeType":"84","messageId":"85","endLine":5,"endColumn":11},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":47,"column":11,"nodeType":"92","endLine":47,"endColumn":94},{"ruleId":"90","severity":1,"message":"91","line":65,"column":9,"nodeType":"92","endLine":65,"endColumn":92},{"ruleId":"90","severity":1,"message":"91","line":70,"column":11,"nodeType":"92","endLine":70,"endColumn":94},{"ruleId":"82","severity":1,"message":"93","line":41,"column":32,"nodeType":"84","messageId":"85","endLine":41,"endColumn":36},{"ruleId":"94","severity":1,"message":"95","line":112,"column":6,"nodeType":"96","endLine":112,"endColumn":8,"suggestions":"97"},{"ruleId":"82","severity":1,"message":"98","line":14,"column":10,"nodeType":"84","messageId":"85","endLine":14,"endColumn":18},{"ruleId":"82","severity":1,"message":"99","line":14,"column":20,"nodeType":"84","messageId":"85","endLine":14,"endColumn":31},{"ruleId":"94","severity":1,"message":"100","line":71,"column":22,"nodeType":"84","endLine":71,"endColumn":33},{"ruleId":"94","severity":1,"message":"100","line":75,"column":30,"nodeType":"84","endLine":75,"endColumn":41},{"ruleId":"94","severity":1,"message":"101","line":108,"column":5,"nodeType":"96","endLine":108,"endColumn":7,"suggestions":"102"},{"ruleId":"94","severity":1,"message":"103","line":20,"column":6,"nodeType":"96","endLine":20,"endColumn":17,"suggestions":"104"},{"ruleId":"90","severity":1,"message":"91","line":29,"column":7,"nodeType":"92","endLine":29,"endColumn":76},{"ruleId":"94","severity":1,"message":"105","line":50,"column":6,"nodeType":"96","endLine":50,"endColumn":8,"suggestions":"106"},{"ruleId":"82","severity":1,"message":"107","line":13,"column":9,"nodeType":"84","messageId":"85","endLine":13,"endColumn":17},{"ruleId":"94","severity":1,"message":"100","line":15,"column":24,"nodeType":"84","endLine":15,"endColumn":35},{"ruleId":"94","severity":1,"message":"108","line":25,"column":6,"nodeType":"96","endLine":25,"endColumn":8,"suggestions":"109"},{"ruleId":"94","severity":1,"message":"100","line":48,"column":25,"nodeType":"84","endLine":48,"endColumn":36},{"ruleId":"94","severity":1,"message":"100","line":57,"column":27,"nodeType":"84","endLine":57,"endColumn":38},{"ruleId":"94","severity":1,"message":"110","line":87,"column":6,"nodeType":"96","endLine":87,"endColumn":8,"suggestions":"111"},{"ruleId":"90","severity":1,"message":"91","line":105,"column":7,"nodeType":"92","endLine":106,"endColumn":66},{"ruleId":"90","severity":1,"message":"91","line":108,"column":7,"nodeType":"92","endLine":109,"endColumn":64},{"ruleId":"94","severity":1,"message":"100","line":15,"column":22,"nodeType":"84","endLine":15,"endColumn":33},{"ruleId":"94","severity":1,"message":"112","line":22,"column":6,"nodeType":"96","endLine":22,"endColumn":8,"suggestions":"113"},{"ruleId":"82","severity":1,"message":"114","line":1,"column":10,"nodeType":"84","messageId":"85","endLine":1,"endColumn":18},{"ruleId":"82","severity":1,"message":"115","line":1,"column":31,"nodeType":"84","messageId":"85","endLine":1,"endColumn":42},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["116"],"no-negated-in-lhs",["117"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'type' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleError' and 'handleSuccess'. Either include them or remove the dependency array.","ArrayExpression",["118"],"'geometry' is assigned a value but never used.","'setGeometry' is assigned a value but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has a missing dependency: 'cleanup'. Either include it or remove the dependency array.",["119"],"React Hook useEffect has a missing dependency: 'roomId'. Either include it or remove the dependency array.",["120"],"React Hook useEffect has missing dependencies: 'audioStream', 'cleanup', and 'draw'. Either include them or remove the dependency array.",["121"],"'audioRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleResize'. Either include it or remove the dependency array.",["122"],"React Hook useEffect has missing dependencies: 'handleKey', 'handleMouseDown', and 'handleMouseUp'. Either include them or remove the dependency array.",["123"],"React Hook useEffect has missing dependencies: 'client.socket' and 'handleLeft'. Either include them or remove the dependency array.",["124"],"'useState' is defined but never used.","'useCallback' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [handleError, handleSuccess]",{"range":"139","text":"140"},"Update the dependencies array to be: [cleanup]",{"range":"141","text":"142"},"Update the dependencies array to be: [roomId, setRoomId]",{"range":"143","text":"144"},"Update the dependencies array to be: [audioStream, cleanup, draw]",{"range":"145","text":"146"},"Update the dependencies array to be: [handleResize]",{"range":"147","text":"148"},"Update the dependencies array to be: [handleKey, handleMouseDown, handleMouseUp]",{"range":"149","text":"150"},"Update the dependencies array to be: [client.socket, handleLeft]",{"range":"151","text":"152"},[3212,3214],"[handleError, handleSuccess]",[2922,2924],"[cleanup]",[768,779],"[roomId, setRoomId]",[1400,1402],"[audioStream, cleanup, draw]",[769,771],"[handleResize]",[2986,2988],"[handleKey, handleMouseDown, handleMouseUp]",[612,614],"[client.socket, handleLeft]"]