[{"/Users/rbyrne/projects/gemu/src/index.js":"1","/Users/rbyrne/projects/gemu/src/reportWebVitals.js":"2","/Users/rbyrne/projects/gemu/src/app/Test.js":"3","/Users/rbyrne/projects/gemu/src/app/lobby/util/Naming.js":"4","/Users/rbyrne/projects/gemu/src/app/lobby/Lobby.js":"5","/Users/rbyrne/projects/gemu/src/app/App.js":"6","/Users/rbyrne/projects/gemu/src/app/room/Room.js":"7","/Users/rbyrne/projects/gemu/src/app/lobby/JoinGame.js":"8","/Users/rbyrne/projects/gemu/src/app/room/components/AudioVisualizer.js":"9","/Users/rbyrne/projects/gemu/src/app/room/components/Player.js":"10","/Users/rbyrne/projects/gemu/src/app/room/components/Controller.js":"11"},{"size":537,"mtime":1612465397559,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1611345917734,"results":"14","hashOfConfig":"13"},{"size":2876,"mtime":1612475173748,"results":"15","hashOfConfig":"13"},{"size":50235,"mtime":1611674542309,"results":"16","hashOfConfig":"13"},{"size":3192,"mtime":1612460031244,"results":"17","hashOfConfig":"13"},{"size":4419,"mtime":1612458414531,"results":"18","hashOfConfig":"13"},{"size":4410,"mtime":1612465529584,"results":"19","hashOfConfig":"13"},{"size":1401,"mtime":1612109922671,"results":"20","hashOfConfig":"13"},{"size":1710,"mtime":1612471476031,"results":"21","hashOfConfig":"13"},{"size":4989,"mtime":1612472264691,"results":"22","hashOfConfig":"13"},{"size":4416,"mtime":1612491566670,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"73ouky",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":2,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/rbyrne/projects/gemu/src/index.js",["50"],"/Users/rbyrne/projects/gemu/src/reportWebVitals.js",[],["51","52"],"/Users/rbyrne/projects/gemu/src/app/Test.js",["53","54","55","56"],"/Users/rbyrne/projects/gemu/src/app/lobby/util/Naming.js",[],"/Users/rbyrne/projects/gemu/src/app/lobby/Lobby.js",["57","58","59"],"/Users/rbyrne/projects/gemu/src/app/App.js",["60","61"],"import React, { useState, useCallback, useEffect } from 'react';\nimport { Route, BrowserRouter, Redirect } from 'react-router-dom';\n\nimport './app.css';\n\n// Lobby Components\nimport Lobby from './lobby/Lobby';\nimport JoinGame from './lobby/JoinGame';\n\n// Game Components\nimport Room from './room/Room'\n\n// Create a Socket to communicate with the game server\nconst socket = require('socket.io-client')();\n\nexport default function App (){\n\n  const [username, setUsername] = useState('');\n  const [roomId, setRoomId] = useState('');\n  const [client, setClient] = useState({});\n  const [message, setMessage] = useState({});\n\n  // Change to username\n  const handleUserName = (event, user) => {\n\n    const { parentNode, value } = event.target;\n    const entry = parentNode.children[0];\n\n    const name = event.type === 'click' ? user : value;\n    const cn = name.length > 0 ? 'goodInput' : 'badInput';\n\n    entry.className = cn;\n    entry.focus();\n    entry.style.width = (Math.max(100,name.length*13)).toString()+'px';\n    setUsername(name);\n  };\n\n  // Change to room id\n  const handleRoomId = (event, room) => {\n\n    const { parentNode, value, type } = event.target;\n    const entry = parentNode.children[0];\n\n    const id = event.type === 'click' ? room : value;\n    const cn = id.length === 6 ? 'goodInput' : 'badInput';\n\n    entry.className = cn;\n    entry.focus();\n    entry.style.width = (Math.max(120,id.length*15)).toString()+'px';\n    setRoomId(id.toUpperCase());\n\n  };\n\n  const handleMessage = useCallback((message, color) => {\n    setMessage({text:message,color:color});\n    setTimeout(()=> {\n      setMessage({});\n    },2000);\n  }, [setMessage]);\n\n  const validateEntries = useCallback((event) => {\n    var valid = true;\n    if (!socket.connected) {\n      handleMessage('Unable to connect to socket', 'red');\n      valid=false;\n    }\n    if (roomId.length<6) {\n      handleMessage('RoomID must be 6 characters long', 'red');\n      valid=false;\n    }\n    if (!username) {\n      handleMessage('You must provide a username', 'red');\n      valid=false\n    }\n    return valid;\n  }, [handleMessage, roomId, username])\n\n  // User starts room\n  const handleStartGame = useCallback((event) => {\n    if (validateEntries()) { socket.emit('startSession', {username:username, roomId:roomId}) }\n  }, [username, roomId, validateEntries]);\n\n  // User joins room\n  const handleJoinGame = useCallback((event) => {\n    if (validateEntries()) { socket.emit('joinSession', {username:username, roomId:roomId}) }\n  },[username, roomId, validateEntries]);\n\n  // User leaves room\n  const handleLogout = (event) => {\n    socket.emit('leaveSession', {username:username, roomId:roomId});\n    setMessage({});\n    setClient({socket:null,peers:[]});\n  };\n\n  const handleError = (message) => {\n    handleMessage(message, 'red');\n    setClient({socket:null, peers:[]})\n  }\n\n  const handleSuccess = (data) => {\n    handleMessage(data.message, 'green');\n    setClient({socket:socket, peers:data.peers})\n  }\n\n  useEffect( () => {\n\n    // Set error message and clear socket on failure\n    socket.on('error', (message) => handleError(message));\n    // Set client socket on success\n    socket.on('success', (data) => handleSuccess(data));\n\n  }, [])\n\n  return (\n    <div className='appContainer'>\n      <div className='messageTicker' style={{color:message.color}}>{message.text}</div>\n      <BrowserRouter>\n        <Route exact path='/'>\n          { client.socket ?\n            <Room client={client} roomId={roomId} username={username}\n              handleLogout={handleLogout} handleMessage={handleMessage}/>\n            :\n            <Lobby username={username} roomId={roomId} handleJoinGame={handleJoinGame}\n              handleStartGame={handleStartGame} handleUserName={handleUserName}\n              handleRoomId={handleRoomId}/>\n          }\n        </Route>\n        <Route path='/join/*'>\n          <div>\n            { client.socket ? <Redirect to='/'/> : null }\n            <JoinGame username={username} setRoomId={setRoomId}\n                handleUserName={handleUserName} handleJoinGame={handleJoinGame}\n                handleLogout={handleLogout}/>\n          </div>\n        </Route>\n      </BrowserRouter>\n      <div className='footer'>\n        <p>Made by\n          <a href='https://ryan-byrne.github.io'> Ryan Byrne </a>\n          | Hosted on <a href=\"https://github.com/ryan-byrne/gemu\">Github</a>\n        </p>\n      </div>\n    </div>\n  )\n}\n","/Users/rbyrne/projects/gemu/src/app/room/Room.js",["62","63","64","65","66","67","68","69","70","71","72"],"import { useState, useEffect, useCallback } from 'react';\n\nimport Player from './components/Player';\nimport Controller from './components/Controller';\n\nimport './style/room.css';\n\nconst Connection = ({client, handleMessage}) => {\n\n  const [peers, setPeers] = useState(client.peers);\n\n  const handleJoined = useCallback((data)=> {\n    handleMessage(data.username+' has joined','blue');\n    setPeers([...peers, data.id]);\n  }, [handleMessage, setPeers, peers]);\n\n  const handleLeft = useCallback((data)=> {\n    handleMessage(data.username+' has left','blue');\n    setPeers(peers.filter(peer=>peer!==data.id))\n  }, [handleMessage, setPeers, peers]);\n\n  useEffect(() => {\n    client.socket.on('joined', (data) => handleJoined(data));\n    client.socket.on('left', (data) => handleLeft(data));\n  });\n\n  return (\n    <div>\n      {peers.map((peer,i)=><div key={i}>{peer}</div>)}\n    </div>\n  )\n\n}\n\nexport default function Room(\n  {client, username, roomId, handleLogout, handleMessage}){\n\n  const [media, setMedia] = useState({\n    video:{stream:null,selecting:false,id:null,devices:[]},\n    audio:{stream:null,selecting:false,id:null,devices:[]}\n  });\n  const height = Math.max(window.innerWidth*3/20, 125);\n  const [playerGeometry, setPlayerGeometry] = useState({\n    size:{ height:height, width:height*4/3}, position:{x:0,y:0}\n  })\n\n  const startVideo = () => {\n\n    const constraints = media.video.id ? {deviceId:media.video.id} : true\n\n    navigator.mediaDevices.getUserMedia({video:constraints})\n      .then((stream)=>{\n        navigator.mediaDevices.enumerateDevices()\n          .then((devices) => {\n            setMedia({...media,\n              video:{\n                ...media.video,\n                stream:stream,\n                devices:devices.filter(d=> d.kind === 'videoinput')\n              }\n            });\n          })\n          .catch((err) => console.log(err))\n      })\n      .catch((err) => console.log(err))\n\n  };\n\n  const startAudio = () => {\n\n    const constraints = media.audio.id ? {deviceId:media.audio.id} : true\n\n    navigator.mediaDevices.getUserMedia({audio:constraints})\n      .then((stream)=>{\n        navigator.mediaDevices.enumerateDevices()\n          .then((devices) => {\n            setMedia({...media,\n              audio:{\n                ...media.audio,\n                stream:stream,\n                devices:devices.filter(d=> d.kind === 'audioinput')\n              }\n            });\n          })\n          .catch((err) => console.log(err))\n      })\n      .catch((err) => console.log(err))\n\n  };\n\n  const stopAudio = async () => {\n    if (!media.audio.stream) { return }\n    await media.audio.stream.getAudioTracks().forEach((track)=> track.stop())\n    setMedia({...media,audio:{...media.audio, stream:null}});\n  };\n\n  const stopVideo = async () => {\n    if (!media.video.stream) { return }\n    await media.video.stream.getVideoTracks().forEach((track)=> track.stop())\n    setMedia({...media,video:{...media.video, stream:null}});\n  };\n\n  const selectVideoDevice = useCallback((event) => {\n    stopVideo();\n    setMedia({...media, video:{...media.video, id:event.taget.value}});\n    startVideo();\n  },[setMedia,media,startVideo,stopVideo]);\n\n  const selectAudioDevice = useCallback((event) => {\n    stopAudio();\n    setMedia({...media, audio:{...media.audio, id:event.taget.value}});\n    getAudioStream();\n  });\n\n  const toggleVideo = (event) => {\n    media.video.stream ? stopVideo() : startVideo();\n  }\n\n  const toggleAudio = (event) => {\n    media.audio.stream ? stopAudio() : getAudioStream();\n  }\n\n  const cleanup = () => {\n    if (media.video.stream) {\n      media.video.stream.getVideoTracks().forEach((track)=> track.stop())\n    }\n    if (media.audio.stream) {\n      media.audio.stream.getAudioTracks().forEach((track)=> track.stop())\n    }\n  }\n\n  useEffect(() => { startVideo() }, []); // Start video on open\n  useEffect(() => { return () => cleanup() } , [media]); // Clearmedia each remount\n\n  // TODO: Create menu to leave, invite, etc.\n  return (\n    <div className='roomContainer'>\n      <div>{roomId}</div>\n      <div className='menuButton' onClick={handleLogout}>Leave</div>\n      <Controller setPlayerGeometry={setPlayerGeometry} playerGeometry={playerGeometry}/>\n      <div className='localPlayerContainer'>\n        <Player size={playerGeometry.size} media={media} toggleAudio={toggleAudio}\n          toggleVideo={toggleVideo}/>\n      </div>\n    </div>\n  )\n}\n","/Users/rbyrne/projects/gemu/src/app/lobby/JoinGame.js",["73","74"],"import { useEffect, useCallback } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport Naming from './util/Naming';\nimport shuffle from './style/shuffle.png'\n\nconst JoinGame = ({setRoomId, username, handleUserName, handleJoinGame, handleLogout}) => {\n\n  const roomId = useLocation().pathname.substring(6);\n\n  const getRandomName = useCallback( event => {\n    var adj = Naming.adjectives[Math.floor(Math.random() * Naming.adjectives.length)];\n    var noun = Naming.nouns[Math.floor(Math.random() * Naming.adjectives.length)];\n    adj = adj.charAt(0).toUpperCase() + adj.slice(1);\n    noun = noun.charAt(0).toUpperCase() + noun.slice(1);\n    handleUserName(event, adj+noun);\n  }, [handleUserName]);\n\n  useEffect(() => {\n    setRoomId(roomId);\n  }, [setRoomId]);\n\n  return (\n    <div className='menuContainer'>\n      <h2>Joining {roomId}</h2>\n      <div className='subMenu'>\n      <input className='menuInput' value={username} type='text'\n      id='user' onChange={handleUserName} onBlur={handleUserName}\n      placeholder='Your Name'/>\n      <img className='randomButton' onClick={getRandomName} src={shuffle}/>\n      <div style={{margin:'10px'}}>\n        <Link className='menuButton' to='/' style={{marginRight:'10px'}}>Leave</Link>\n        <button className='menuButton' onClick={handleJoinGame}>Join</button>\n      </div>\n      </div>\n    </div>\n  )\n}\n\nexport default JoinGame;\n","/Users/rbyrne/projects/gemu/src/app/room/components/AudioVisualizer.js",["75"],"/Users/rbyrne/projects/gemu/src/app/room/components/Player.js",["76","77","78","79","80"],"/Users/rbyrne/projects/gemu/src/app/room/components/Controller.js",["81","82","83","84","85","86","87","88","89"],{"ruleId":"90","severity":1,"message":"91","line":5,"column":8,"nodeType":"92","messageId":"93","endLine":5,"endColumn":11},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"90","severity":1,"message":"98","line":1,"column":9,"nodeType":"92","messageId":"93","endLine":1,"endColumn":15},{"ruleId":"90","severity":1,"message":"99","line":1,"column":38,"nodeType":"92","messageId":"93","endLine":1,"endColumn":49},{"ruleId":"100","severity":1,"message":"101","line":83,"column":51,"nodeType":"102","endLine":83,"endColumn":53,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"104","line":84,"column":48,"nodeType":"102","endLine":84,"endColumn":62,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":47,"column":11,"nodeType":"108","endLine":47,"endColumn":94},{"ruleId":"106","severity":1,"message":"107","line":65,"column":9,"nodeType":"108","endLine":65,"endColumn":92},{"ruleId":"106","severity":1,"message":"107","line":70,"column":11,"nodeType":"108","endLine":70,"endColumn":94},{"ruleId":"90","severity":1,"message":"109","line":41,"column":32,"nodeType":"92","messageId":"93","endLine":41,"endColumn":36},{"ruleId":"100","severity":1,"message":"110","line":112,"column":6,"nodeType":"102","endLine":112,"endColumn":8,"suggestions":"111"},{"ruleId":"90","severity":1,"message":"112","line":8,"column":7,"nodeType":"92","messageId":"93","endLine":8,"endColumn":17},{"ruleId":"100","severity":1,"message":"113","line":47,"column":9,"nodeType":"114","endLine":67,"endColumn":4,"suggestions":"115"},{"ruleId":"90","severity":1,"message":"116","line":69,"column":9,"nodeType":"92","messageId":"93","endLine":69,"endColumn":19},{"ruleId":"100","severity":1,"message":"117","line":97,"column":9,"nodeType":"114","endLine":101,"endColumn":4,"suggestions":"118"},{"ruleId":"90","severity":1,"message":"119","line":103,"column":9,"nodeType":"92","messageId":"93","endLine":103,"endColumn":26},{"ruleId":"90","severity":1,"message":"120","line":109,"column":9,"nodeType":"92","messageId":"93","endLine":109,"endColumn":26},{"ruleId":"100","severity":1,"message":"121","line":109,"column":29,"nodeType":"92","endLine":109,"endColumn":40},{"ruleId":"122","severity":2,"message":"123","line":112,"column":5,"nodeType":"92","messageId":"124","endLine":112,"endColumn":19},{"ruleId":"122","severity":2,"message":"123","line":120,"column":40,"nodeType":"92","messageId":"124","endLine":120,"endColumn":54},{"ruleId":"100","severity":1,"message":"125","line":132,"column":37,"nodeType":"102","endLine":132,"endColumn":39,"suggestions":"126"},{"ruleId":"100","severity":1,"message":"104","line":133,"column":48,"nodeType":"102","endLine":133,"endColumn":55,"suggestions":"127"},{"ruleId":"100","severity":1,"message":"128","line":20,"column":6,"nodeType":"102","endLine":20,"endColumn":17,"suggestions":"129"},{"ruleId":"106","severity":1,"message":"107","line":29,"column":7,"nodeType":"108","endLine":29,"endColumn":76},{"ruleId":"100","severity":1,"message":"130","line":50,"column":6,"nodeType":"102","endLine":50,"endColumn":8,"suggestions":"131"},{"ruleId":"90","severity":1,"message":"132","line":1,"column":18,"nodeType":"92","messageId":"93","endLine":1,"endColumn":27},{"ruleId":"90","severity":1,"message":"133","line":1,"column":29,"nodeType":"92","messageId":"93","endLine":1,"endColumn":37},{"ruleId":"90","severity":1,"message":"99","line":1,"column":39,"nodeType":"92","messageId":"93","endLine":1,"endColumn":50},{"ruleId":"90","severity":1,"message":"134","line":5,"column":8,"nodeType":"92","messageId":"93","endLine":5,"endColumn":14},{"ruleId":"90","severity":1,"message":"135","line":142,"column":9,"nodeType":"92","messageId":"93","endLine":142,"endColumn":17},{"ruleId":"90","severity":1,"message":"136","line":9,"column":8,"nodeType":"92","messageId":"93","endLine":9,"endColumn":13},{"ruleId":"90","severity":1,"message":"137","line":62,"column":9,"nodeType":"92","messageId":"93","endLine":62,"endColumn":26},{"ruleId":"100","severity":1,"message":"121","line":62,"column":29,"nodeType":"92","endLine":62,"endColumn":40},{"ruleId":"90","severity":1,"message":"138","line":66,"column":9,"nodeType":"92","messageId":"93","endLine":66,"endColumn":26},{"ruleId":"100","severity":1,"message":"121","line":66,"column":29,"nodeType":"92","endLine":66,"endColumn":40},{"ruleId":"100","severity":1,"message":"121","line":70,"column":25,"nodeType":"92","endLine":70,"endColumn":36},{"ruleId":"100","severity":1,"message":"121","line":76,"column":27,"nodeType":"92","endLine":76,"endColumn":38},{"ruleId":"106","severity":1,"message":"107","line":126,"column":7,"nodeType":"108","endLine":127,"endColumn":66},{"ruleId":"106","severity":1,"message":"107","line":129,"column":7,"nodeType":"108","endLine":130,"endColumn":64},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["139"],"no-negated-in-lhs",["140"],"'useRef' is defined but never used.","'useCallback' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'startAudio' and 'startVideo'. Either include them or remove the dependency array.","ArrayExpression",["141"],"React Hook useEffect has a missing dependency: 'cleanup'. Either include it or remove the dependency array.",["142"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'type' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleError' and 'handleSuccess'. Either include them or remove the dependency array.",["143"],"'Connection' is assigned a value but never used.","The 'startVideo' function makes the dependencies of useCallback Hook (at line 107) change on every render. To fix this, wrap the definition of 'startVideo' in its own useCallback() Hook.","VariableDeclarator",["144"],"'startAudio' is assigned a value but never used.","The 'stopVideo' function makes the dependencies of useCallback Hook (at line 107) change on every render. To fix this, wrap the definition of 'stopVideo' in its own useCallback() Hook.",["145"],"'selectVideoDevice' is assigned a value but never used.","'selectAudioDevice' is assigned a value but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","no-undef","'getAudioStream' is not defined.","undef","React Hook useEffect has a missing dependency: 'startVideo'. Either include it or remove the dependency array.",["146"],["147"],"React Hook useEffect has a missing dependency: 'roomId'. Either include it or remove the dependency array.",["148"],"React Hook useEffect has missing dependencies: 'audioStream', 'cleanup', and 'draw'. Either include them or remove the dependency array.",["149"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'noface' is defined but never used.","'audioRef' is assigned a value but never used.","'arrow' is defined but never used.","'handleSelectVideo' is assigned a value but never used.","'handleSelectAudio' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [startAudio, startVideo]",{"range":"168","text":"169"},"Update the dependencies array to be: [video, audio, cleanup]",{"range":"170","text":"171"},"Update the dependencies array to be: [handleError, handleSuccess]",{"range":"172","text":"173"},"Wrap the definition of 'startVideo' in its own useCallback() Hook.",{"range":"174","text":"175"},"Wrap the definition of 'stopVideo' in its own useCallback() Hook.",{"range":"176","text":"177"},"Update the dependencies array to be: [startVideo]",{"range":"178","text":"179"},"Update the dependencies array to be: [cleanup, media]",{"range":"180","text":"181"},"Update the dependencies array to be: [roomId, setRoomId]",{"range":"182","text":"183"},"Update the dependencies array to be: [audioStream, cleanup, draw]",{"range":"184","text":"185"},[2379,2381],"[startAudio, startVideo]",[2454,2468],"[video, audio, cleanup]",[3212,3214],"[handleError, handleSuccess]",[1349,1926],"useCallback(() => {\n\n    const constraints = media.video.id ? {deviceId:media.video.id} : true\n\n    navigator.mediaDevices.getUserMedia({video:constraints})\n      .then((stream)=>{\n        navigator.mediaDevices.enumerateDevices()\n          .then((devices) => {\n            setMedia({...media,\n              video:{\n                ...media.video,\n                stream:stream,\n                devices:devices.filter(d=> d.kind === 'videoinput')\n              }\n            });\n          })\n          .catch((err) => console.log(err))\n      })\n      .catch((err) => console.log(err))\n\n  })",[2770,2967],"useCallback(async () => {\n    if (!media.video.stream) { return }\n    await media.video.stream.getVideoTracks().forEach((track)=> track.stop())\n    setMedia({...media,video:{...media.video, stream:null}});\n  })",[3823,3825],"[startVideo]",[3898,3905],"[cleanup, media]",[768,779],"[roomId, setRoomId]",[1400,1402],"[audioStream, cleanup, draw]"]