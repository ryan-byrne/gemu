[{"/Users/rbyrne/projects/gemu-page/src/index.js":"1","/Users/rbyrne/projects/gemu-page/src/reportWebVitals.js":"2","/Users/rbyrne/projects/gemu-page/src/Gemu/Gemu.js":"3","/Users/rbyrne/projects/gemu-page/src/MainMenu/MainMenu.js":"4"},{"size":508,"mtime":1611341746046,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1611341245944,"results":"7","hashOfConfig":"6"},{"size":258,"mtime":1611341943673,"results":"8","hashOfConfig":"6"},{"size":2857,"mtime":1611343597600,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"wi3p0n",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/rbyrne/projects/gemu-page/src/index.js",[],["20","21"],"/Users/rbyrne/projects/gemu-page/src/reportWebVitals.js",[],"/Users/rbyrne/projects/gemu-page/src/Gemu/Gemu.js",[],"/Users/rbyrne/projects/gemu-page/src/MainMenu/MainMenu.js",["22","23","24"],"import React from 'react';\nimport './MainMenu.css';\n\nclass MainMenu extends React.Component {\n\n  constructor(){\n    super();\n    this.state = {index:0}\n  }\n\n  changeMenu(index) {\n    if (index == this.state.index) {\n      this.setState({index:0})\n    }\n    else {\n      this.setState({index:index})\n    }\n  }\n\n  render() {\n\n    const subMenus = [<div></div>, <JoinMenu/>, <StartMenu/>]\n\n    return (\n      <div className='menuContainer'>\n        <div className='mainMenu'>\n          <MenuItem name=\"Join a Gemu\" onClick={(e) => this.changeMenu(1)}/>\n          <MenuItem name=\"Start a Gemu\" onClick={(e) => this.changeMenu(2)}/>\n        </div>\n        <div className='subMenu'>{subMenus[this.state.index]}</div>\n      </div>\n    )\n  }\n}\n\nclass MenuItem extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      hover: false,\n      selected: false\n    }\n  }\n\n  changeHover(){\n    if (!this.state.selected) {\n      this.setState({hover:!this.state.hover})\n    }\n  }\n\n\n  render() {\n\n    let itemClass = this.state.hover ? 'hoveredMenuItem' : 'normalMenuItem';\n    let subMenu =  this.state.selected ? <div>Selected</div> : <div></div>\n\n    return (\n      <div\n        className = {itemClass}\n        onMouseEnter = {this.changeHover.bind(this)}\n        onMouseLeave = {this.changeHover.bind(this)}\n        onClick = {this.props.onClick}\n        style = {{padding:'20px', cursor:'pointer', borderRadius:'10px'}}\n      >\n        {this.props.name}\n      </div>\n    )\n  }\n}\n\nclass JoinMenu extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      roomCode:'ROOM CODE',\n      textColor:'#d1d1d1',\n      letterSpacing:'1px'\n    }\n  }\n\n  inputSelect() {\n    this.setState({roomCode:\"\"})\n  }\n\n  roomInput(event) {\n\n    let type = event.nativeEvent.inputType;\n\n    if (type === 'insertText'){\n      let newText = this.state.roomCode + event.nativeEvent.data;\n      this.setState({roomCode:newText})\n      console.log(newText);\n    }\n    else if (type === \"\") {}\n\n    console.log(type);\n\n  }\n\n  roomOut() {\n    this.setState({\n      roomCode:'ROOM CODE',\n      textColor:'#d1d1d1',\n      letterSpacing:'1px'\n    })\n  }\n\n  render() {\n\n    return (\n      <div>\n        <form>\n          <label>\n            <input\n              onBlur={this.roomOut.bind(this)} value={this.state.roomCode}\n              onChange={this.roomInput.bind(this)} autoComplete='off'\n              onClick={this.inputSelect.bind(this)} className='roomCode'\n              type=\"text\" maxLength='6' style={\n                {\n                  color:this.state.textColor\n                }\n              }\n            />\n          </label>\n        </form>\n      </div>\n    )\n  }\n\n}\n\nclass StartMenu extends React.Component {\n\n  constructor() {\n    super()\n  }\n\n  render() {\n    return (\n      <div>StartMenu</div>\n    )\n  }\n}\n\n\nexport default MainMenu;\n",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":12,"column":15,"nodeType":"31","messageId":"32","endLine":12,"endColumn":17},{"ruleId":"33","severity":1,"message":"34","line":56,"column":9,"nodeType":"35","messageId":"36","endLine":56,"endColumn":16},{"ruleId":"37","severity":1,"message":"38","line":136,"column":3,"nodeType":"39","messageId":"40","endLine":138,"endColumn":4},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'subMenu' is assigned a value but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]