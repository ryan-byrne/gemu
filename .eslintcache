[{"/Users/rbyrne/projects/gemu/src/index.js":"1","/Users/rbyrne/projects/gemu/src/reportWebVitals.js":"2","/Users/rbyrne/projects/gemu/src/Gemu.js":"3","/Users/rbyrne/projects/gemu/src/Lobby.js":"4","/Users/rbyrne/projects/gemu/src/util/Naming.js":"5","/Users/rbyrne/projects/gemu/src/TestApp.js":"6","/Users/rbyrne/projects/gemu/src/Participant.js":"7"},{"size":542,"mtime":1611718707980,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1611345917734,"results":"10","hashOfConfig":"9"},{"size":2395,"mtime":1611769164709,"results":"11","hashOfConfig":"9"},{"size":2939,"mtime":1611764939526,"results":"12","hashOfConfig":"9"},{"size":50235,"mtime":1611674542309,"results":"13","hashOfConfig":"9"},{"size":750,"mtime":1611717566700,"results":"14","hashOfConfig":"9"},{"size":2189,"mtime":1611790909156,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"73ouky",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/rbyrne/projects/gemu/src/index.js",["33"],"/Users/rbyrne/projects/gemu/src/reportWebVitals.js",[],"/Users/rbyrne/projects/gemu/src/Gemu.js",["34","35"],"import React, { useState, useCallback, useEffect } from 'react';\nimport { Route, BrowserRouter, Redirect } from 'react-router-dom';\nimport Lobby from './Lobby';\nimport Participant from './Participant';\nconst socket = require('socket.io-client')();\n\nconst Gemu = () => {\n\n  // TODO: remove testing values\n\n  const [username, setUsername] = useState('');\n  const [roomId, setRoomId] = useState('');\n  const [roomSocket, setRoomSocket] = useState(null);\n\n  // Change to username\n  const handleUserName = (event) => {\n    if (typeof event === 'string') {setUsername(event)}\n    else {\n      if (!event.target.value) {event.target.className = 'badSubMenuItem' }\n      else { event.target.className = 'goodSubMenuItem' }\n      setUsername(event.target.value)\n    }\n  };\n\n  // Change to room id\n  const handleRoomId = (event) => {\n    if (typeof event === 'string') {setRoomId(event)}\n    else {\n      if (event.target.value.length < 6) {event.target.className = 'badSubMenuItem' }\n      else { event.target.className = 'goodSubMenuItem' }\n      setRoomId(event.target.value.toUpperCase());\n    }\n  };\n\n  // User starts room\n  const handleStartGame = (event) => {\n    if ( roomId.length !== 6 ) { } // Handle incorrect roomID\n    else if (!username) { } // Handle empty username\n    else { socket.emit('startSession', {username:username,roomId:roomId}) }\n  };\n\n  // User joins room\n  const handleJoinGame = (event) => {\n    if ( roomId.length !== 6 ) { }\n    else if (!username) { }\n    else { socket.emit('joinSession', {username:username,roomId:roomId}) }\n  };\n\n  // User leaves room\n  const handleLogout = (event) => {\n    socket.emit('leaveSession', {username:username, roomId:roomId})\n    setRoomSocket(null);\n  };\n\n  socket.on('error', (message) => setRoomSocket(null));\n  socket.on('success', () => setRoomSocket(socket))\n\n  // TODO: Join active game with URL\n  return (\n    <BrowserRouter>\n      { !roomSocket ? <Redirect to='/'/> : <Redirect to={roomId}/>}\n      <Route exact path='/'>\n        <Lobby username={username} roomId={roomId} handleJoinGame={handleJoinGame}\n          handleStartGame={handleStartGame} handleUserName={handleUserName}\n          handleRoomId={handleRoomId}/>\n      </Route>\n      <Route path={'/'+roomId}>\n        <Participant username={username} roomSocket={roomSocket} handleLogout={handleLogout} />\n      </Route>\n    </BrowserRouter>\n  )\n}\n\n\nexport default Gemu;\n","/Users/rbyrne/projects/gemu/src/Lobby.js",["36","37"],"import React, { useState, useCallback } from 'react';\nimport './style/Lobby.css';\nimport Naming from './util/Naming';\n\nconst Lobby = ({\n  username, roomId, handleUserName, handleRoomId, handleStartGame, handleJoinGame\n}) => {\n\n  const [selected, setSelected] = useState(null);\n\n  const handleSelectionChange = (id) => {(id === selected) ? setSelected(null) : setSelected(id);};\n\n  const getRandomRoom = useCallback( event => {\n    var result = '';\n    const chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    for (var i = 6; i > 0; --i) result += chars[Math.floor(Math.random() * chars.length)];\n    event.target.parentElement.children[0].className = 'goodSubMenuItem';\n    handleRoomId(result);\n  }, []);\n\n  const getRandomName = useCallback( event => {\n    var adj = Naming.adjectives[Math.floor(Math.random() * Naming.adjectives.length)];\n    var noun = Naming.nouns[Math.floor(Math.random() * Naming.adjectives.length)];\n    adj = adj.charAt(0).toUpperCase() + adj.slice(1);\n    noun = noun.charAt(0).toUpperCase() + noun.slice(1);\n    event.target.parentElement.children[0].className = 'goodSubMenuItem';\n    handleUserName(adj+noun);\n  }, []);\n\n  const mainMenu = (\n    <div className='mainMenu'>\n      <div className={(selected === 0) ? 'selectedMenuItem' : 'menuItem'}\n        onClick={() => handleSelectionChange(0)}>Join a Gemu</div>\n      <div className={(selected === 1) ? 'selectedMenuItem' : 'menuItem'}\n        onClick={() => handleSelectionChange(1)}>Start a Gemu</div>\n    </div>\n  );\n\n  var subMenu;\n  if (selected === 0) {\n    subMenu = (\n      <div className='joinGame'>\n        <div>\n          <input className='subMenuItem' value={username} type='text'\n          id='userInput' onChange={handleUserName} onBlur={handleUserName}/>\n        <button onClick={getRandomName}>Randomize</button>\n        </div>\n        <div>\n          <input className='subMenuItem' value={roomId} maxLength={6}\n          type='text' id='roomInput' onChange={handleRoomId} onBlur={handleRoomId}/>\n        </div>\n        <div><input type='submit' value='Join' onClick={handleJoinGame}/></div>\n      </div>\n    )\n  }\n  else if (selected === 1) {\n    subMenu = (\n      <div className='startGame'>\n        <div>\n          <input className='subMenuItem' value={username} type='text'\n          id='userInput' onChange={handleUserName} onBlur={handleUserName}/>\n        <button onClick={getRandomName}>Randomize</button>\n        </div>\n        <div>\n          <input className='subMenuItem' value={roomId} type='text' maxLength={6}\n          id='roomInput' onChange={handleRoomId} onBlur={handleRoomId}/>\n        <button onClick={getRandomRoom}>Randomize</button>\n        </div>\n        <div><input type='submit' value='Start' onClick={handleStartGame}/></div>\n      </div>\n    )\n  }\n  else {\n    subMenu = (<div></div>)\n  }\n\n  return (\n    <div className='menuContainer'>\n      {mainMenu}\n      {subMenu}\n    </div>\n  )\n};\n\nexport default Lobby;\n","/Users/rbyrne/projects/gemu/src/util/Naming.js",[],"/Users/rbyrne/projects/gemu/src/TestApp.js",["38","39","40"],"import {React, useCallback, useState, useEffect} from 'react';\nconst io = require('socket.io-client');\nconst socket = io();\n\nconst TestApp = () => {\n\n  const [date, setDatetime] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n\n  const handleMsgChange = useCallback( event => {\n    setMessage(event.target.value);\n  }, []);\n\n  socket.on('userExists', (data) => {\n    setError(data)\n  });\n\n  socket.on('userSet', (data) => {\n    console.log(data);\n  });\n\n  return (\n    <div>\n      <input onChange={handleMsgChange} type='text'/>\n      {message}\n      <button onClick={()=>socket.emit('setUsername', message)}>Click me</button>\n      <div>{error}</div>\n    </div>\n  )\n\n}\n\nexport default TestApp;\n","/Users/rbyrne/projects/gemu/src/Participant.js",["41","42","43","44","45","46","47","48","49","50","51","52"],{"ruleId":"53","severity":1,"message":"54","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":15},{"ruleId":"53","severity":1,"message":"57","line":1,"column":27,"nodeType":"55","messageId":"56","endLine":1,"endColumn":38},{"ruleId":"53","severity":1,"message":"58","line":1,"column":40,"nodeType":"55","messageId":"56","endLine":1,"endColumn":49},{"ruleId":"59","severity":1,"message":"60","line":19,"column":6,"nodeType":"61","endLine":19,"endColumn":8,"suggestions":"62"},{"ruleId":"59","severity":1,"message":"63","line":28,"column":6,"nodeType":"61","endLine":28,"endColumn":8,"suggestions":"64"},{"ruleId":"53","severity":1,"message":"58","line":1,"column":39,"nodeType":"55","messageId":"56","endLine":1,"endColumn":48},{"ruleId":"53","severity":1,"message":"65","line":7,"column":10,"nodeType":"55","messageId":"56","endLine":7,"endColumn":14},{"ruleId":"53","severity":1,"message":"66","line":7,"column":16,"nodeType":"55","messageId":"56","endLine":7,"endColumn":27},{"ruleId":"53","severity":1,"message":"57","line":1,"column":38,"nodeType":"55","messageId":"56","endLine":1,"endColumn":49},{"ruleId":"53","severity":1,"message":"67","line":4,"column":8,"nodeType":"55","messageId":"56","endLine":4,"endColumn":12},{"ruleId":"53","severity":1,"message":"68","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":14},{"ruleId":"53","severity":1,"message":"69","line":6,"column":8,"nodeType":"55","messageId":"56","endLine":6,"endColumn":11},{"ruleId":"53","severity":1,"message":"70","line":7,"column":8,"nodeType":"55","messageId":"56","endLine":7,"endColumn":13},{"ruleId":"53","severity":1,"message":"71","line":8,"column":8,"nodeType":"55","messageId":"56","endLine":8,"endColumn":14},{"ruleId":"53","severity":1,"message":"72","line":12,"column":10,"nodeType":"55","messageId":"56","endLine":12,"endColumn":15},{"ruleId":"53","severity":1,"message":"73","line":12,"column":17,"nodeType":"55","messageId":"56","endLine":12,"endColumn":25},{"ruleId":"53","severity":1,"message":"74","line":13,"column":10,"nodeType":"55","messageId":"56","endLine":13,"endColumn":15},{"ruleId":"53","severity":1,"message":"75","line":13,"column":17,"nodeType":"55","messageId":"56","endLine":13,"endColumn":25},{"ruleId":"59","severity":1,"message":"76","line":18,"column":9,"nodeType":"77","endLine":48,"endColumn":4},{"ruleId":"78","severity":1,"message":"79","line":35,"column":26,"nodeType":"80","messageId":"81","endLine":35,"endColumn":28},"no-unused-vars","'TestApp' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'handleRoomId'. Either include it or remove the dependency array. If 'handleRoomId' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["82"],"React Hook useCallback has a missing dependency: 'handleUserName'. Either include it or remove the dependency array. If 'handleUserName' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["83"],"'date' is assigned a value but never used.","'setDatetime' is assigned a value but never used.","'mute' is defined but never used.","'unmute' is defined but never used.","'vid' is defined but never used.","'unvid' is defined but never used.","'noface' is defined but never used.","'audio' is assigned a value but never used.","'setAudio' is assigned a value but never used.","'video' is assigned a value but never used.","'setVideo' is assigned a value but never used.","The 'handleKeyPress' function makes the dependencies of useEffect Hook (at line 57) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'handleKeyPress' in its own useCallback() Hook.","VariableDeclarator","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [handleRoomId]",{"range":"88","text":"89"},"Update the dependencies array to be: [handleUserName]",{"range":"90","text":"91"},[702,704],"[handleRoomId]",[1146,1148],"[handleUserName]"]