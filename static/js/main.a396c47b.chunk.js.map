{"version":3,"sources":["MainMenu/MainMenu.js","Gemu/Gemu.js","reportWebVitals.js","index.js"],"names":["MainMenu","state","index","this","setState","subMenus","className","name","onClick","e","changeMenu","React","Component","MenuItem","hover","selected","itemClass","onMouseEnter","changeHover","bind","onMouseLeave","props","style","padding","cursor","borderRadius","JoinMenu","roomCode","textColor","letterSpacing","event","type","nativeEvent","inputType","newText","data","console","log","onBlur","roomOut","value","onChange","roomInput","autoComplete","inputSelect","maxLength","color","StartMenu","Gemu","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAGMA,G,8DAEJ,aAAc,IAAD,8BACX,gBACKC,MAAQ,CAACC,MAAM,GAFT,E,uDAKFA,GACLA,GAASC,KAAKF,MAAMC,MACtBC,KAAKC,SAAS,CAACF,MAAM,IAGrBC,KAAKC,SAAS,CAACF,MAAMA,M,+BAIf,IAAD,OAEDG,EAAW,CAAC,wBAAa,cAAC,EAAD,IAAa,cAAC,EAAD,KAE5C,OACE,sBAAKC,UAAU,gBAAf,UACE,sBAAKA,UAAU,WAAf,UACE,cAAC,EAAD,CAAUC,KAAK,cAAcC,QAAS,SAACC,GAAD,OAAO,EAAKC,WAAW,MAC7D,cAAC,EAAD,CAAUH,KAAK,eAAeC,QAAS,SAACC,GAAD,OAAO,EAAKC,WAAW,SAEhE,qBAAKJ,UAAU,UAAf,SAA0BD,EAASF,KAAKF,MAAMC,gB,GA1B/BS,IAAMC,YAgCvBC,E,kDAEJ,aAAe,IAAD,8BACZ,gBACKZ,MAAQ,CACXa,OAAO,EACPC,UAAU,GAJA,E,0DASPZ,KAAKF,MAAMc,UACdZ,KAAKC,SAAS,CAACU,OAAOX,KAAKF,MAAMa,U,+BAOnC,IAAIE,EAAYb,KAAKF,MAAMa,MAAQ,kBAAoB,iBACxCX,KAAKF,MAAMc,SAE1B,OACE,qBACET,UAAaU,EACbC,aAAgBd,KAAKe,YAAYC,KAAKhB,MACtCiB,aAAgBjB,KAAKe,YAAYC,KAAKhB,MACtCK,QAAWL,KAAKkB,MAAMb,QACtBc,MAAS,CAACC,QAAQ,OAAQC,OAAO,UAAWC,aAAa,QAL3D,SAOGtB,KAAKkB,MAAMd,W,GA9BGI,IAAMC,WAoCvBc,E,kDAEJ,aAAe,IAAD,8BACZ,gBACKzB,MAAQ,CACX0B,SAAS,YACTC,UAAU,UACVC,cAAc,OALJ,E,0DAUZ1B,KAAKC,SAAS,CAACuB,SAAS,O,gCAGhBG,GAER,IAAIC,EAAOD,EAAME,YAAYC,UAE7B,GAAa,eAATF,EAAsB,CACxB,IAAIG,EAAU/B,KAAKF,MAAM0B,SAAWG,EAAME,YAAYG,KACtDhC,KAAKC,SAAS,CAACuB,SAASO,IACxBE,QAAQC,IAAIH,GAIdE,QAAQC,IAAIN,K,gCAKZ5B,KAAKC,SAAS,CACZuB,SAAS,YACTC,UAAU,UACVC,cAAc,U,+BAMhB,OACE,8BACE,+BACE,gCACE,uBACES,OAAQnC,KAAKoC,QAAQpB,KAAKhB,MAAOqC,MAAOrC,KAAKF,MAAM0B,SACnDc,SAAUtC,KAAKuC,UAAUvB,KAAKhB,MAAOwC,aAAa,MAClDnC,QAASL,KAAKyC,YAAYzB,KAAKhB,MAAOG,UAAU,WAChDyB,KAAK,OAAOc,UAAU,IAAIvB,MACxB,CACEwB,MAAM3C,KAAKF,MAAM2B,uB,GAlDZjB,IAAMC,WA8DvBmC,E,kDAEJ,aAAe,wC,qDAKb,OACE,gD,GARkBpC,IAAMC,WAcfZ,ICnIAgD,E,kDAVb,aAAc,IAAD,8BACX,gBACK/C,MAAQ,CAACC,MAAM,GAFT,E,qDAMX,OAAO,cAAC,EAAD,Q,GARQS,IAAMC,WCQVqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a396c47b.chunk.js","sourcesContent":["import React from 'react';\nimport './MainMenu.css';\n\nclass MainMenu extends React.Component {\n\n  constructor(){\n    super();\n    this.state = {index:0}\n  }\n\n  changeMenu(index) {\n    if (index == this.state.index) {\n      this.setState({index:0})\n    }\n    else {\n      this.setState({index:index})\n    }\n  }\n\n  render() {\n\n    const subMenus = [<div></div>, <JoinMenu/>, <StartMenu/>]\n\n    return (\n      <div className='menuContainer'>\n        <div className='mainMenu'>\n          <MenuItem name=\"Join a Gemu\" onClick={(e) => this.changeMenu(1)}/>\n          <MenuItem name=\"Start a Gemu\" onClick={(e) => this.changeMenu(2)}/>\n        </div>\n        <div className='subMenu'>{subMenus[this.state.index]}</div>\n      </div>\n    )\n  }\n}\n\nclass MenuItem extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      hover: false,\n      selected: false\n    }\n  }\n\n  changeHover(){\n    if (!this.state.selected) {\n      this.setState({hover:!this.state.hover})\n    }\n  }\n\n\n  render() {\n\n    let itemClass = this.state.hover ? 'hoveredMenuItem' : 'normalMenuItem';\n    let subMenu =  this.state.selected ? <div>Selected</div> : <div></div>\n\n    return (\n      <div\n        className = {itemClass}\n        onMouseEnter = {this.changeHover.bind(this)}\n        onMouseLeave = {this.changeHover.bind(this)}\n        onClick = {this.props.onClick}\n        style = {{padding:'20px', cursor:'pointer', borderRadius:'10px'}}\n      >\n        {this.props.name}\n      </div>\n    )\n  }\n}\n\nclass JoinMenu extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      roomCode:'ROOM CODE',\n      textColor:'#d1d1d1',\n      letterSpacing:'1px'\n    }\n  }\n\n  inputSelect() {\n    this.setState({roomCode:\"\"})\n  }\n\n  roomInput(event) {\n\n    let type = event.nativeEvent.inputType;\n\n    if (type === 'insertText'){\n      let newText = this.state.roomCode + event.nativeEvent.data;\n      this.setState({roomCode:newText})\n      console.log(newText);\n    }\n    else if (type === \"\") {}\n\n    console.log(type);\n\n  }\n\n  roomOut() {\n    this.setState({\n      roomCode:'ROOM CODE',\n      textColor:'#d1d1d1',\n      letterSpacing:'1px'\n    })\n  }\n\n  render() {\n\n    return (\n      <div>\n        <form>\n          <label>\n            <input\n              onBlur={this.roomOut.bind(this)} value={this.state.roomCode}\n              onChange={this.roomInput.bind(this)} autoComplete='off'\n              onClick={this.inputSelect.bind(this)} className='roomCode'\n              type=\"text\" maxLength='6' style={\n                {\n                  color:this.state.textColor\n                }\n              }\n            />\n          </label>\n        </form>\n      </div>\n    )\n  }\n\n}\n\nclass StartMenu extends React.Component {\n\n  constructor() {\n    super()\n  }\n\n  render() {\n    return (\n      <div>StartMenu</div>\n    )\n  }\n}\n\n\nexport default MainMenu;\n","import React from 'react';\nimport './Gemu.css';\nimport MainMenu from '../MainMenu/MainMenu';\n\nclass Gemu extends React.Component {\n\n  constructor(){\n    super();\n    this.state = {index:0}\n  }\n\n  render(){\n    return <MainMenu/>;\n  }\n}\n\nexport default Gemu;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Gemu from './Gemu/Gemu';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Gemu />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}